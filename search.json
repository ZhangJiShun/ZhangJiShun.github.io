[{"title":"教你如何使用Hexo搭建个人博客","url":"/教你如何使用Hexo搭建个人博客.html","content":"摘要:最近突然有个想法，想做个博客。网上看了很多帖子，踩了很多坑。作为一名即将实习的前端小白，想记录下搭建这个博客的点点滴滴，也想给后续有需要的人借鉴经验。一起来学习吧！\n***\n#### 目录\n* 准备工作\n1.注册github\n2.安装Git\n3.安装node.js\n4.环境配置\n* 安装Hexo\n1.初始化Hexo\n2.将博客部署到GitHub Pages上\n* 优化Hexo\n1.主题\n2.域名配置\n3.添加评论功能\n4.添加统计功能\n5.配置百度站长（就是让百度和谷歌都能搜索到你的博客）\n* 将博客同时托管到github和coding上\n* **\n### 关于GitHub\ngithub是一个面向开源及私有软件项目的托管平台，因为只支持git作为唯一的版本库格式进行托管，故名github\n* 优点\n1.github可以托管各种git库，并且可以免费使用，快速稳定\n2.github有很多好的开源代码和项目，可以拿来学习，对技术提升很有作用\n3.可以进行协作开发\n* GitHub Pages\n  GitHub Pages是是通过我们网站托管和发布的公开网页，并且可以绑定你的网站域名，使用它可以为你提供一个免费的服务器\n### 注册GitHub\n要想使用github第一步当然是注册github账号了，github官网地址为：https://github.com/\n之后就可以创建仓库了（免费用户只能建公共仓库）\n### 安装Git\n去[Git官网][1]下载相应的版本\n* 安装的话直接按照操作即可\n* 安装完成后，右键鼠标选择git bash，打开命令行，输入`git version`，检查是否安装成功\n```\n$ git version\n$ git version 2.15.1.windows.2\n```\n* [Git安装教程][2]\n* [如何使用Git][3]\n### 安装node.js\n* 去[node.js官网][4]下载相应版本，并进行安装\n* node安装完成后，因为需要使用npm，所以windows系统需要配置环境变量，具体配置过程可以看下这个[node安装及环境变量配置][5]\n### 安装Hexo\n* [Hexo官网][6]\n Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页\n * 右键鼠标选择git bash，输入npm命令即可安装\n  >npm install hexo-cli -g   //-g代表是全局安装\n * 初始化Hexo\n 1. 创建你的Hexo文件夹，比如我的是`E:\\Blog\\Hexo`\n 2. 创建好后，右击选中文件夹选择git bash进入命令行，依次输入\n >cd Hexo  //进入要创建hexo的文件夹里面\n >hexo init  //初始化\n\n 初始化完成后，Hexo 将会在指定文件夹中创建所需要的文件。Hexo文件夹下的目录如下：\n ![1](http://p4jrxhzth.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180210124010.png)\n\n 3. 输入命令，在本地打开localhost:4000查看效果\n >hexo generate\n >hexo server\n\n ![2](http://p4jrxhzth.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180210142916.png)\n *  接下来就是将博客部署到GitHub Pages上\n 1. 创建放置Hexo文件的仓库\n 登录github后，点击[New repository][9]创建仓库，`这里需要注意的是:`\n 仓库命名一定要与自己的用户名一一对应\n![3](http://p4jrxhzth.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20180210144033.png)\n* 配置SSH秘钥\n配置Github的SSH密钥可以让本地git项目与远程的github建立联系，让我们在本地写了代码之后直接通过git操作就可以实现本地代码库与Github代码库同步\n1. 先检查本地是否存在SSH秘钥,打开git bash命令行输入\n>cd ~/. ssh\n\n检查本机中是否存在.ssh目录\n如果不存在，则创建一对新的ssh秘钥\n>ssh-keygen -t rsa -C \"your_email@example.com\"\n>//邮箱改为你自己的github邮箱,这里会提示输入一些信息,直接默认回车就可以\n\n接下来就是把生成的公钥内容复制出来\n>clip < ~/.ssh/id_rsa.pub\n>或者在c盘用户目录下，找到.ssh目录，复制公钥\n\n2. 在github中添加你的公钥\n\n![4](http://p4jrxhzth.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180210145355.png)\n\n选择SSH Keys\n\n![5](http://p4jrxhzth.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180210145531.png)\n\n点击New SSH Key\n![6](http://p4jrxhzth.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180210145914.png)\n3. 添加完后，进行测试，看是否连接成功，命令行输入\n>ssh -T git@github.com\n\n显示：\n>The authenticity of host 'github.com (207.97.227.239)' can't be established.\n>RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.\n>Are you sure you want to continue connecting (yes/no)? //输入yes\n\nok,配置成功\n4. 绑定你的github用户及密码\n>git config --global user.name \"zhang\"//用户名\n>git config --global user.email  \"zhang@163.com\"//填写自己的邮箱\n>//到这里SSH Key就配置成功了，本地可以连接到github账户\n* 将本地的Hexo文件更新到你的github仓库上\n1. 打开自己的username.github.io仓库\n2. 打开之后，选择SSH类型将仓库地址复制下来\n\n![7](http://p4jrxhzth.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180210151049.png)\n\n3. 打开你的本地Hexo文件夹，用记事本打开_config.yml文件\n\n![8](http://p4jrxhzth.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180210151802.png)\n\n4. 在_config.yml文件做修改，找到关键字deploy，添加如图属性值，冒号后面要有一个空格\n\n![9](http://p4jrxhzth.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180210152128.png)\n\n5. 打开git bash，在你的Hexo文件夹下依次执行\n>npm install hexo-deployer-git --save\n>hexo g\n>hexo d\n\n执行完成后，你的hexo就会部署到github pages上了\n如果你的hexo没有提交成功，先检查一下本地是否绑定了github账号，如果报错`ERROR Deployer not found: git`，就是你的deployer没有安装成功，重新执行下命令即可，执行完再次提交一下`hexo g -d`\n做完这些你的博客就部署到github pages上了\n\n6. 你可以本地输入\n>hexo g\n>hexo s\n\n访问localhost:4000查看你的博客\n或者输入https://[`你的用户名`].github.io,\n访问你的博客\n***\n未完待续，后续继续更新\n\n\n  [1]: https://git-scm.com/download/win\n  [2]: https://www.cnblogs.com/smuxiaolei/p/7484678.html\n  [3]: http://blog.csdn.net/free_wind22/article/details/50967723?\n  [4]: https://nodejs.org/zh-cn/\n  [5]: http://blog.csdn.net/qq451354/article/details/65021307?locationNum=14&fps=1\n  [6]: https://hexo.io/\n  [9]: https://github.com/new\n","tags":["Hexo"]},{"title":"coding","url":"/coding.html"},{"title":"测试一","url":"/测试一.html","content":"# 测试一\n 你好\n## 测试二\n","tags":["3"]},{"title":"First","url":"/第一篇博客.html","content":"# 我的第一篇博客\n## Quick Start\n","tags":["React"],"categories":["HTML"]},{"title":"Hello World","url":"/hello-world.html","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]